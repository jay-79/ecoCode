This rule aims at reducing CPU consumption by telling the device to use a less accurate yet more eco-friendly geolocation, when geolocation API is used.

== Examples

Examples of **non-compliant** code for this rule:

[source,js]
----
var options = { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 };
function success(pos) {
  console.log(pos.coords);
}

function error(err) {
  console.warn(err);
}

navigator.geolocation.getCurrentPosition(success, error, options);
----

Examples of **compliant** code for this rule:

[source,js]
----
// enableHighAccuracy is false by default, so not declaring it is correct
function success(pos) {
  console.log(pos);
}
navigator.geolocation.getCurrentPosition(success);
----

[source,js]
----
var options = { enableHighAccuracy: false, timeout: 5000, maximumAge: 0 };
function success(pos) {
  console.log(pos.coords);
}

function error(err) {
  console.warn(err);
}

navigator.geolocation.getCurrentPosition(success, error, options);
----
